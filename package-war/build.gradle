// Apply the gradle plugins
plugins {
    id 'war'
    id 'com.bmuschko.cargo' version '2.6'
    id 'org.springframework.boot' version '2.1.3.RELEASE'
}

dependencies {
    // Servlet API
    providedCompile group: 'javax.servlet', name: 'javax.servlet-api'

    // Process Application
    compile project(':' + rootProject.name + '-process-application')

    // Camunda BPM - Engine
    providedCompile (group: 'org.camunda.bpm', name: 'camunda-engine') {
        exclude group: 'org.springframework.boot'
        exclude group: 'org.springframework'
    }

    // Spring
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    providedRuntime group: 'org.springframework.boot', name: 'spring-boot-starter-tomcat'
    compile group: 'org.springframework', name: 'spring-beans'
    compile group: 'org.springframework', name: 'spring-core'
}

// Tomcat Deployment Configuration
ext {
    camunda_serverType = 'tomcat9x'
    camunda_hostname = 'localhost'
    camunda_username = 'tomcat'
    camunda_password = 'tomcat'
}

// Build WAR with custom name
bootWar {
    excludeDevtools = false
    archiveName = 'process.war'
}

// Spring Boot
springBoot {
    mainClassName = 'application.Application'
}

// Cargo Configuration
cargo {
    containerId = "$camunda_serverType"
    port = 80

    deployable {
        file = file('build/libs/process.war')
        context = rootProject.name
    }

    remote {
        hostname = "$camunda_hostname"
        username = "$camunda_username"
        password = "$camunda_password"
    }
}

// Deployment Tasks
task deployWarToSharedEngine {
    group 'camunda'
    description 'Builds the Process and runs the deployment to the shared engine.'

    dependsOn clean
    dependsOn bootWar
    dependsOn cargoRedeployRemote
}

// avoid errors caused by multiple logger-bindings, also the shared engine already has slf4j which would cause a conflict
configurations {
    runtime.exclude group: "org.slf4j"
    compile.exclude group: "org.slf4j"
}
