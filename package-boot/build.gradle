// Apply the gradle plugins
plugins {
    id 'org.springframework.boot' version '1.5.8.RELEASE'
}

dependencyManagement {
    imports {
        mavenBom 'org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter:2.3.0'
    }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // Process Application
    compile project(':' + rootProject.name + '-process-application')

	// Camunda
	compile group: 'org.camunda.bpm.springboot', name: 'camunda-bpm-spring-boot-starter', version: '2.3.0'
	testCompile group: 'org.camunda.bpm.springboot', name: 'camunda-bpm-spring-boot-starter-test', version: '2.3.0'
	//compile group:'org.camunda.bpm.springboot', name: 'camunda-bpm-spring-boot-starter-rest'
    //compile group:'org.camunda.bpm.springboot', name: 'camunda-bpm-spring-boot-starter-webapp'

    // Db-Driver
    compile group: 'com.h2database', name: 'h2', version: '1.4.196'
}

// Spring Boot
springBoot {
    mainClass = 'org.camunda.bpm.CamundaProcessApplication'
}

// Run against a local in-memory database
task bootRunWithLocalDb(type: org.springframework.boot.gradle.run.BootRunTask) {
    group = 'Application'

    doFirst() {
        main = project.mainClassName
        classpath = sourceSets.main.runtimeClasspath
        systemProperty 'spring.profiles.active', 'common,db-local'
    }
}

// Run against remote database
task bootRunWithRemoteDb(type: org.springframework.boot.gradle.run.BootRunTask) {
    group = 'Application'

    doFirst() {
        main = project.mainClassName
        classpath = sourceSets.main.runtimeClasspath
        systemProperty 'spring.profiles.active', 'common,db-remote'
    }
}
